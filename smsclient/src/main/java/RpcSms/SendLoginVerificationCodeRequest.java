// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `sms.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package RpcSms;

public class SendLoginVerificationCodeRequest extends Ice.ObjectImpl
{
    public SendLoginVerificationCodeRequest()
    {
        fingerPrint = "";
        mobile = "";
    }

    public SendLoginVerificationCodeRequest(int deviceType, String fingerPrint, String mobile, boolean resend, int lastChannel)
    {
        this.deviceType = deviceType;
        this.fingerPrint = fingerPrint;
        this.mobile = mobile;
        this.resend = resend;
        this.lastChannel = lastChannel;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new SendLoginVerificationCodeRequest();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::RpcSms::SendLoginVerificationCodeRequest"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeInt(deviceType);
        __os.writeString(fingerPrint);
        __os.writeString(mobile);
        __os.writeBool(resend);
        __os.writeInt(lastChannel);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        deviceType = __is.readInt();
        fingerPrint = __is.readString();
        mobile = __is.readString();
        resend = __is.readBool();
        lastChannel = __is.readInt();
        __is.endReadSlice();
    }

    public int deviceType;

    public String fingerPrint;

    public String mobile;

    public boolean resend;

    public int lastChannel;

    public SendLoginVerificationCodeRequest
    clone()
    {
        return (SendLoginVerificationCodeRequest)super.clone();
    }

    public static final long serialVersionUID = -6481208970920874718L;
}
